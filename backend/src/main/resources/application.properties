# Server Configuration
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/fintech_db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# OpenAPI/Swagger Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# Allow all origins for development
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=300s

# Datasource Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}

# Consumer Configuration
spring.kafka.consumer.group-id=${kafka.consumer.group-id:fintech-consumer-group}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.security.protocol=PLAINTEXT
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=1000

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.security.protocol=PLAINTEXT

# Kafka Topics
kafka.topic.market-data=${KAFKA_TOPIC_MARKET_DATA:market-data-topic}

# Additional Kafka Properties
spring.kafka.properties.security.protocol=PLAINTEXT
spring.kafka.listener.missing-topics-fatal=false

# Actuator Endpoints
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.health.show-details=when_authorized 

# Alpha Vantage Configuration
alphavantage.api.url=https://www.alphavantage.co
alphavantage.api.key=demo

# Data Refresh Schedule
app.data.refresh.cron=0 0 * * * * 

# Allow bean overriding (optional fix)
spring.main.allow-bean-definition-overriding=true 

# GitHub API Configuration
github.api.url=https://api.github.com
github.api.token=${GITHUB_TOKEN}
github.org=BalajiSrinivasan-Palo
github.fund.repo=pru-fintech-fund-composition
github.portfolio.repo=pru-fintech-portfolio 

# JWT Configuration
jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
jwt.expiration=86400000

# Disable Kafka components
app.kafka.enabled=false
